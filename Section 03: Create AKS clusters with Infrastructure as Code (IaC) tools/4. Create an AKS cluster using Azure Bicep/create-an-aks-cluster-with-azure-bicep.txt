mkdir bicep-files

cd bicep-files

az deployment group what-if --resource-group aks-bicep-rg --template-file aks.bicep --parameters dnsPrefix=<dns-prefix> #outboundType=<outbound-type>

az deployment group create --resource-group aks-bicep-rg --template-file aks.bicep --parameters dnsPrefix=<dns-prefix> outboundType=<outbound-type>


# Please check https://learn.microsoft.com/en-us/azure/aks/learn/quick-kubernetes-deploy-bicep?tabs=azure-cli to validate the details of the file, like the API version and other parameters
aks.bicep:
@description('The name of the Managed Cluster resource.')
param clusterName string = 'aks-bicep'

@description('The location of the Managed Cluster resource.')
param location string = resourceGroup().location

@description('Optional DNS prefix to use with hosted Kubernetes API server FQDN.')
param dnsPrefix string

@description('Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize.')
@minValue(0)
@maxValue(1023)
param osDiskSizeGB int = 0

@description('The number of nodes for the cluster.')
@minValue(1)
@maxValue(50)
param agentCount int = 3

@description('The size of the Virtual Machine.')
param agentVMSize string = 'standard_d2s_v3'

@description('The outbound type of the cluster')
param outboundType string

resource aks 'Microsoft.ContainerService/managedClusters@2024-02-01' = {
  name: clusterName
  location: location
  identity: {
    type: 'SystemAssigned'
  }
  properties: {
    dnsPrefix: dnsPrefix
    networkProfile: {
      networkPlugin: 'azure'
      outboundType: outboundType
    }
    agentPoolProfiles: [
      {
        name: 'agentpool'
        osDiskSizeGB: osDiskSizeGB
        count: agentCount
        vmSize: agentVMSize
        osType: 'Linux'
        mode: 'System'
      }
    ]
  }
}

output controlPlaneFQDN string = aks.properties.fqdn
output infraRG string = aks.properties.nodeResourceGroup